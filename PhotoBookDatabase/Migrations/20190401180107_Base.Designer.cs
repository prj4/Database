// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhotoBookDatabase.Data;

namespace PhotoBookDatabase.Migrations
{
    [DbContext(typeof(PhotoBookDbContext))]
    [Migration("20190401180107_Base")]
    partial class Base
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PhotoBookDatabase.Model.Event", b =>
                {
                    b.Property<int>("Pin")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("HostId");

                    b.Property<string>("Location")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Pin");

                    b.HasIndex("HostId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("PhotoBookDatabase.Model.EventGuest", b =>
                {
                    b.Property<int>("Event_Pin");

                    b.Property<int>("Guest_Id");

                    b.HasKey("Event_Pin", "Guest_Id");

                    b.HasIndex("Guest_Id");

                    b.ToTable("EventGuests");
                });

            modelBuilder.Entity("PhotoBookDatabase.Model.Picture", b =>
                {
                    b.Property<int>("PictureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventPin");

                    b.Property<int>("Taker");

                    b.Property<string>("URL");

                    b.HasKey("PictureId");

                    b.HasIndex("EventPin");

                    b.HasIndex("Taker");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("PhotoBookDatabase.Model.PictureTaker", b =>
                {
                    b.Property<int>("PictureTakerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.HasKey("PictureTakerId");

                    b.ToTable("PictureTakers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("PictureTaker");
                });

            modelBuilder.Entity("PhotoBookDatabase.Model.Guest", b =>
                {
                    b.HasBaseType("PhotoBookDatabase.Model.PictureTaker");

                    b.HasDiscriminator().HasValue("Guest");
                });

            modelBuilder.Entity("PhotoBookDatabase.Model.Host", b =>
                {
                    b.HasBaseType("PhotoBookDatabase.Model.PictureTaker");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("PW")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.HasDiscriminator().HasValue("Host");
                });

            modelBuilder.Entity("PhotoBookDatabase.Model.Event", b =>
                {
                    b.HasOne("PhotoBookDatabase.Model.Host", "Host")
                        .WithMany("Events")
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PhotoBookDatabase.Model.EventGuest", b =>
                {
                    b.HasOne("PhotoBookDatabase.Model.Event", "Event")
                        .WithMany("EventGuests")
                        .HasForeignKey("Event_Pin")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PhotoBookDatabase.Model.Guest", "Guest")
                        .WithMany("EventGuests")
                        .HasForeignKey("Guest_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PhotoBookDatabase.Model.Picture", b =>
                {
                    b.HasOne("PhotoBookDatabase.Model.Event", "Event")
                        .WithMany("Pictures")
                        .HasForeignKey("EventPin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PhotoBookDatabase.Model.PictureTaker", "PictureTaker")
                        .WithMany("Pictures")
                        .HasForeignKey("Taker")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
